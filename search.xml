<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2024/08/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start">Quick Start</h2>
<h3 id="Create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>blog</title>
    <url>/2024/08/14/hexo+github+zeabur%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>可以使用hexo+github pages直接搭建，这里使用zeabur设置域名访问</p>
<p>安装git、node.js(这里不过多赘述)</p>
<p>Hexo文档以及主题  <a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a>  注意官方文档很久没更新了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#验证Node.js、npm、git是否正常安装</span></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git -v</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装Hexo</span></span><br><span class="line">npm install -g hexo-cli   <span class="comment">#国内安装较慢</span></span><br><span class="line"><span class="comment">#修改为使用阿里云镜像源安装</span></span><br><span class="line">访问  https://npmmirror.com/  复制代码 即：</span><br><span class="line">npm install -g cnpm --registry=https://registry.npmmirror.com   <span class="comment">#这个过程可能相对较慢，耐心等待，安装后把npm换成cnpm使用</span></span><br><span class="line"><span class="comment">#安装Hexo</span></span><br><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#初始化Hexo项目</span></span><br><span class="line">hexo init blogfile     <span class="comment">#在选定位置执行，会生成blogfile文件项目，拉取可能失败，多执行几次即可</span></span><br><span class="line"><span class="comment">#也可以新建好blogfile文件夹，进入后直接执行   hexo init          尝试几次发现这样拉取成功几率大</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#我这里出现了一下错误，没有错误的可以忽略直接 hexo g   并启动服务 hexo s  这里 hexo init 时下载依赖失败    手动下载</span></span><br><span class="line"><span class="comment">#一下是全部过程，耐心查看</span></span><br><span class="line">beast@gentle-beast MINGW64 /d</span><br><span class="line">$ hexo init blogfile</span><br><span class="line">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class="line">INFO  Install dependencies</span><br><span class="line">warning hexo &gt; warehouse &gt; cuid@2.1.8: Cuid and other k-sortable and non-cryptog</span><br><span class="line">raphic ids (Ulid, ObjectId, KSUID, all UUIDs) are all insecure. Use @paralleldri</span><br><span class="line">ve/cuid2 instead.</span><br><span class="line">warning hexo-renderer-marked &gt; jsdom &gt; abab@2.0.6: Use your platform<span class="string">&#x27;s native at</span></span><br><span class="line"><span class="string">ob() and btoa() methods instead</span></span><br><span class="line"><span class="string">warning hexo-renderer-marked &gt; jsdom &gt; data-urls &gt; abab@2.0.6: Use your platform</span></span><br><span class="line"><span class="string">&#x27;</span>s native atob() and btoa() methods instead</span><br><span class="line">warning hexo-renderer-marked &gt; jsdom &gt; domexception@4.0.0: Use your platform<span class="string">&#x27;s n</span></span><br><span class="line"><span class="string">ative DOMException instead</span></span><br><span class="line"><span class="string">warning hexo-renderer-stylus &gt; stylus &gt; glob@7.2.3: Glob versions prior to v9 ar</span></span><br><span class="line"><span class="string">e no longer supported</span></span><br><span class="line"><span class="string">warning hexo-renderer-stylus &gt; stylus &gt; glob &gt; inflight@1.0.6: This module is no</span></span><br><span class="line"><span class="string">t supported, and leaks memory. Do not use it. Check out lru-cache if you want a</span></span><br><span class="line"><span class="string">good and tested way to coalesce async requests by a key value, which is much mor</span></span><br><span class="line"><span class="string">e comprehensive and powerful.</span></span><br><span class="line"><span class="string">WARN  Failed to install dependencies. Please run &#x27;</span>npm install<span class="string">&#x27; in &quot;D:\blogfile&quot;</span></span><br><span class="line"><span class="string">folder.</span></span><br><span class="line"><span class="string">#这里报错依赖</span></span><br><span class="line"><span class="string">beast@gentle-beast MINGW64 /d</span></span><br><span class="line"><span class="string">$ cd blogfile/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">beast@gentle-beast MINGW64 /d/blogfile</span></span><br><span class="line"><span class="string">$ ls</span></span><br><span class="line"><span class="string">_config.landscape.yml  node_modules/  scaffolds/  themes/</span></span><br><span class="line"><span class="string">_config.yml            package.json   source/</span></span><br><span class="line"><span class="string">#使用cnpm手动安装</span></span><br><span class="line"><span class="string">beast@gentle-beast MINGW64 /d/blogfile</span></span><br><span class="line"><span class="string">$ cnpm install</span></span><br><span class="line"><span class="string">√ Installed 10 packages on D:\blogfile</span></span><br><span class="line"><span class="string">√ All packages installed (used 36ms(network 27ms), speed 0B/s, json 0(0B), tarba</span></span><br><span class="line"><span class="string">ll 0B, manifests cache hit 0, etag hit 0 / miss 0)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#生成静态文件又报错，报错显示highlight.js 模块可能中出现了语法错误</span></span><br><span class="line"><span class="string">beast@gentle-beast MINGW64 /d/blogfile</span></span><br><span class="line"><span class="string">$ hexo g</span></span><br><span class="line"><span class="string">INFO  Validating config</span></span><br><span class="line"><span class="string">INFO  Start processing</span></span><br><span class="line"><span class="string">FATAL Something&#x27;</span>s wrong. Maybe you can find the solution here: https://hexo.io/d</span><br><span class="line">ocs/troubleshooting.html</span><br><span class="line">D:\blogfile\node_modules\highlight.js\lib\languages\isbl.js:1806</span><br><span class="line">  // enum TE</span><br><span class="line">SyntaxError: Unexpected end of input</span><br><span class="line">    at wrapSafe (node:internal/modules/cjs/loader:1281:20)</span><br><span class="line">    at Module._compile (node:internal/modules/cjs/loader:1321:27)</span><br><span class="line">    at Module._extensions..js (node:internal/modules/cjs/loader:1416:10)</span><br><span class="line">    at Module.load (node:internal/modules/cjs/loader:1208:32)</span><br><span class="line">    at Module._load (node:internal/modules/cjs/loader:1024:12)</span><br><span class="line">    at Module.require (node:internal/modules/cjs/loader:1233:19)</span><br><span class="line">    at require (node:internal/modules/helpers:179:18)</span><br><span class="line">    at Object.&lt;anonymous&gt; (D:\blogfile\node_modules\highlight.js\lib\index.js:88</span><br><span class="line">:31)</span><br><span class="line">    at Module._compile (node:internal/modules/cjs/loader:1358:14)</span><br><span class="line">    at Module._extensions..js (node:internal/modules/cjs/loader:1416:10)</span><br><span class="line">    at Module.load (node:internal/modules/cjs/loader:1208:32)</span><br><span class="line">    at Module._load (node:internal/modules/cjs/loader:1024:12)</span><br><span class="line">    at Module.require (node:internal/modules/cjs/loader:1233:19)</span><br><span class="line">    at require (node:internal/modules/helpers:179:18)</span><br><span class="line">    at highlightUtil (D:\blogfile\node_modules\hexo-util\dist\highlight.js:19:16</span><br><span class="line">)</span><br><span class="line">    at Hexo.highlightFilter (D:\blogfile\node_modules\hexo\dist\plugins\highligh</span><br><span class="line">t\highlight.js:41:12)</span><br><span class="line">    at SyntaxHighlight.<span class="built_in">exec</span> (D:\blogfile\node_modules\hexo\dist\extend\syntax_hi</span><br><span class="line">ghlight.js:21:24)</span><br><span class="line">    at D:\blogfile\node_modules\hexo\dist\plugins\filter\before_post_render\back</span><br><span class="line">tick_code_block.js:49:44</span><br><span class="line">    at String.replace (&lt;anonymous&gt;)</span><br><span class="line">    at Hexo.backtickCodeBlock (D:\blogfile\node_modules\hexo\dist\plugins\filter</span><br><span class="line">\before_post_render\backtick_code_block.js:11:36)</span><br><span class="line">    at Hexo.tryCatcher (D:\blogfile\node_modules\bluebird\js\release\util.js:16:</span><br><span class="line">23)</span><br><span class="line">    at Hexo.&lt;anonymous&gt; (D:\blogfile\node_modules\bluebird\js\release\method.js:</span><br><span class="line">15:34)</span><br><span class="line"><span class="comment">#更新 Hexo 和相关依赖,重新安装highlight.js</span></span><br><span class="line">beast@gentle-beast MINGW64 /d/blogfile</span><br><span class="line">$ npm update</span><br><span class="line">npm warn deprecated inflight@1.0.6: This module is not supported, and leaks memo</span><br><span class="line">ry. Do not use it. Check out lru-cache <span class="keyword">if</span> you want a good and tested way to coal</span><br><span class="line">esce async requests by a key value, <span class="built_in">which</span> is much more comprehensive and powerfu</span><br><span class="line">l.</span><br><span class="line">npm warn deprecated glob@7.2.3: Glob versions prior to v9 are no longer supporte</span><br><span class="line">d</span><br><span class="line">npm warn deprecated abab@2.0.6: Use your platform<span class="string">&#x27;s native atob() and btoa() met</span></span><br><span class="line"><span class="string">hods instead</span></span><br><span class="line"><span class="string">npm warn deprecated domexception@4.0.0: Use your platform&#x27;</span>s native DOMException</span><br><span class="line">instead</span><br><span class="line">npm warn deprecated cuid@2.1.8: Cuid and other k-sortable and non-cryptographic</span><br><span class="line">ids (Ulid, ObjectId, KSUID, all UUIDs) are all insecure. Use @paralleldrive/cuid</span><br><span class="line">2 instead.</span><br><span class="line"></span><br><span class="line">added 3 packages, removed 1 package, and changed 224 packages <span class="keyword">in</span> 3m</span><br><span class="line"></span><br><span class="line">23 packages are looking <span class="keyword">for</span> funding</span><br><span class="line">  run `npm fund` <span class="keyword">for</span> details</span><br><span class="line"></span><br><span class="line">beast@gentle-beast MINGW64 /d/blogfile</span><br><span class="line">$ npm uninstall highlight.js</span><br><span class="line"></span><br><span class="line">up to <span class="built_in">date</span> <span class="keyword">in</span> 1s</span><br><span class="line"></span><br><span class="line">23 packages are looking <span class="keyword">for</span> funding</span><br><span class="line">  run `npm fund` <span class="keyword">for</span> details</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用cnpm重新安装highlight.js</span></span><br><span class="line">beast@gentle-beast MINGW64 /d/blogfile</span><br><span class="line">$ cnpm install highlight.js</span><br><span class="line">√ Linked 1 latest versions fallback to D:\blogfile\node_modules\.store\node_modu</span><br><span class="line">les</span><br><span class="line">√ Installed 1 packages on D:\blogfile</span><br><span class="line">√ All packages installed (1 packages installed from npm registry, used 7s(networ</span><br><span class="line">k 7s), speed 0B/s, json 0(0B), tarball 0B, manifests cache hit 1, etag hit 1 / m</span><br><span class="line">iss 0)</span><br><span class="line"></span><br><span class="line">dependencies:</span><br><span class="line">+ highlight.js ^11.10.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#清理缓存并使用cnpm重新安装依赖</span></span><br><span class="line">beast@gentle-beast MINGW64 /d/blogfile</span><br><span class="line">$ cnpm cache clean --force</span><br><span class="line">npm WARN using --force Recommended protections disabled.</span><br><span class="line"></span><br><span class="line">beast@gentle-beast MINGW64 /d/blogfile</span><br><span class="line">$ <span class="built_in">rm</span> -rf node_modules</span><br><span class="line"></span><br><span class="line">beast@gentle-beast MINGW64 /d/blogfile</span><br><span class="line">$ cnpm install</span><br><span class="line">√ Linked 208 latest versions fallback to D:\blogfile\node_modules\.store\node_mo</span><br><span class="line">dules</span><br><span class="line">deprecate hexo-renderer-stylus@3.0.1 › stylus@0.62.0 › glob@^7.1.6 Glob versions</span><br><span class="line"> prior to v9 are no longer supported</span><br><span class="line">deprecate hexo-renderer-stylus@3.0.1 › stylus@0.62.0 › glob@7.2.3 › inflight@^1.</span><br><span class="line">0.4 This module is not supported, and leaks memory. Do not use it. Check out lru</span><br><span class="line">-cache <span class="keyword">if</span> you want a good and tested way to coalesce async requests by a key val</span><br><span class="line">ue, <span class="built_in">which</span> is much more comprehensive and powerful.</span><br><span class="line">deprecate hexo-renderer-marked@6.3.0 › jsdom@20.0.3 › domexception@^4.0.0 Use yo</span><br><span class="line">ur platform<span class="string">&#x27;s native DOMException instead</span></span><br><span class="line"><span class="string">deprecate hexo-renderer-marked@6.3.0 › jsdom@20.0.3 › abab@^2.0.6 Use your platf</span></span><br><span class="line"><span class="string">orm&#x27;</span>s native atob() and btoa() methods instead</span><br><span class="line">deprecate hexo@7.3.0 › warehouse@5.0.1 › cuid@^2.1.8 Cuid and other k-sortable a</span><br><span class="line">nd non-cryptographic ids (Ulid, ObjectId, KSUID, all UUIDs) are all insecure. Us</span><br><span class="line">e @paralleldrive/cuid2 instead.</span><br><span class="line">√ Run 1 script(s) <span class="keyword">in</span> 835ms.</span><br><span class="line">√ Installed 11 packages on D:\blogfile</span><br><span class="line">√ All packages installed (220 packages installed from npm registry, used 10s(net</span><br><span class="line">work 10s), speed 553.16KB/s, json 155(1.17MB), tarball 4.36MB, manifests cache h</span><br><span class="line">it 54, etag hit 53 / miss 89)</span><br><span class="line"><span class="comment">#cnpm install 命令成功地安装了依赖包，但有一些关于依赖包的警告和弃用提示，不必理会</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#成功，莫名其妙ps：有大佬来解释一下吗</span></span><br><span class="line">beast@gentle-beast MINGW64 /d/blogfile</span><br><span class="line">$ hexo g</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded <span class="keyword">in</span> 236 ms</span><br><span class="line">INFO  Generated: archives/2024/index.html</span><br><span class="line">INFO  Generated: archives/2024/08/index.html</span><br><span class="line">INFO  Generated: archives/index.html</span><br><span class="line">INFO  Generated: index.html</span><br><span class="line">INFO  Generated: fancybox/jquery.fancybox.min.css</span><br><span class="line">INFO  Generated: css/style.css</span><br><span class="line">INFO  Generated: js/jquery-3.6.4.min.js</span><br><span class="line">INFO  Generated: fancybox/jquery.fancybox.min.js</span><br><span class="line">INFO  Generated: js/script.js</span><br><span class="line">INFO  Generated: css/images/banner.jpg</span><br><span class="line">INFO  Generated: 2024/08/13/hello-world/index.html</span><br><span class="line">INFO  11 files generated <span class="keyword">in</span> 238 ms</span><br><span class="line"><span class="comment">#成功启动服务</span></span><br><span class="line">beast@gentle-beast MINGW64 /d/blogfile</span><br><span class="line">$ hexo s</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br><span class="line"></span><br><span class="line"><span class="comment">#此时访问http://localhost:4000/，已经成功了</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装切换主题，我这里选了Butterfly，一直喜欢这个风格，访问github，可能需要科学上网，不能科学上网的使用steam++加速github，直接复制下面代码也行</span></span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/08/14/IVFnQ1wc3K9AMZY.png" alt="image-20240814100937449"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line"><span class="comment">#这里证书加速有问题的话是因为开了网络加速</span></span><br><span class="line"><span class="comment">#关闭证书验证</span></span><br><span class="line">git config --global http.sslVerify <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装 pug &amp; stylus renderer</span></span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改项目根目录配置文件_config.yml，别找成主题的_config.yml</span></span><br><span class="line"><span class="comment">#修改主题为</span></span><br><span class="line">theme: butterfly    <span class="comment">#这里使用什么主题就写什么</span></span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/08/14/BXHAdbgf5OjRlm7.png" alt="image-20240814101844005"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#清理缓存，重新生成静态文件并运行</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment"># 或hexo c 或hexo cl</span></span><br><span class="line"><span class="comment">#这里有报错看下面，少一个组件，官方文档的事</span></span><br><span class="line">$ hexo cl</span><br><span class="line">INFO  Validating config</span><br><span class="line">ERROR Script load failed: themes\butterfly\scripts\filters\post_lazyload.js</span><br><span class="line">Error: Cannot find module <span class="string">&#x27;hexo-util&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">beast@gentle-beast MINGW64 /d/blogfile</span><br><span class="line">$ cnpm install hexo-util --save</span><br><span class="line">√ Linked 1 latest versions fallback to D:\blogfile\node_modules\.store\node_modules</span><br><span class="line">√ Installed 1 packages on D:\blogfile</span><br><span class="line">√ All packages installed (used 92ms(network 90ms), speed 0B/s, json 0(0B), tarball 0B, manifests cache hit 1, etag hit 1 / miss</span><br><span class="line">0)</span><br><span class="line"></span><br><span class="line">dependencies:</span><br><span class="line">+ hexo-util ^3.3.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ hexo cl</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO</span><br><span class="line">  ===================================================================</span><br><span class="line">      <span class="comment">#####  #    # ##### ##### ###### #####  ###### #      #   #</span></span><br><span class="line">      <span class="comment">#    # #    #   #     #   #      #    # #      #       # #</span></span><br><span class="line">      <span class="comment">#####  #    #   #     #   #####  #    # #####  #        #</span></span><br><span class="line">      <span class="comment">#    # #    #   #     #   #      #####  #      #        #</span></span><br><span class="line">      <span class="comment">#    # #    #   #     #   #      #   #  #      #        #</span></span><br><span class="line">      <span class="comment">#####   ####    #     #   ###### #    # #      ######   #</span></span><br><span class="line">                            4.13.0</span><br><span class="line">  ===================================================================</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#然后生成静态文件</span></span><br><span class="line">hexo generate</span><br><span class="line"><span class="comment"># 或hexo g</span></span><br><span class="line">hexo server</span><br><span class="line"><span class="comment"># 或hexo s  访问http://localhost:4000/</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改主题内容，不修改的话图片很简约</span></span><br><span class="line"><span class="comment">#访问github上butterfly主题的Docs中文版，看到升级建议</span></span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/08/14/xL9bDK7AvzfCpHX.png" alt="image-20240814103447920"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">為了減少升級主題後帶來的不便，請使用以下方法（建議，可以不做）。</span><br><span class="line"></span><br><span class="line">在 hexo 的根目錄創建一個文件 _config.butterfly.yml，並把主題目錄的 _config.yml 內容複製到 _config.butterfly.yml 去。( 注意: 複製的是主題的 _config.yml ，而不是 hexo 的 _config.yml)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">作者: Jerry</span><br><span class="line">連結: https://butterfly.js.org/posts/21cfbf15/</span><br><span class="line">來源: Butterfly</span><br><span class="line">著作權歸作者所有。商業轉載請聯繫作者獲得授權，非商業轉載請註明出處。</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注意： 不要把主題目錄的 _config.yml 刪掉</span><br><span class="line">注意： 以後只需要在 _config.butterfly.yml 進行配置就行。</span><br><span class="line">如果使用了 _config.butterfly.yml， 配置主題的 _config.yml 將不會有效果。</span><br><span class="line">Hexo會自動合併主題中的 _config.yml 和 _config.butterfly.yml 裏的配置，如果存在同名配置，會使用 _config.butterfly.yml 的配置，其優先度較高。</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建完成后，这里使用了https://sm.ms/，一个免费的在线图床服务</span></span><br><span class="line"><span class="comment">#上传自己的图片，并生成链接，放入_config.butterfly.yml，这里只做演示，修改以下内容</span></span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/08/14/DB8HuM97zo5mXQg.png" alt="image-20240814103928092"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#完成后重新清理缓存，生成静态文件并运行</span></span><br><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line"><span class="comment">#访问http://localhost:4000/查看</span></span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/08/14/jCmn1FGv2YRqQ7K.png" alt="image-20240814104331473"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#推送或部署到GitHub，首先安装部署插件</span></span><br><span class="line">cnpm install hexo-deployer-git --save</span><br><span class="line"><span class="comment">#配置Hexo部署信息，在根目录下的_config.yml,注意缩进，yaml文件对缩进有要求</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  repository: https://github.com/manong/blogfile.git    <span class="comment">#这里复制自己在github上创建的仓库连接，创建仓库就不过多赘述了</span></span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/08/14/QCMJ4jXUk6tp9g2.png" alt="image-20240814102822640"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#推送，首次弹出对话框登录github</span></span><br><span class="line">hexo deploy</span><br><span class="line"><span class="comment"># 或hexo d</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#最后一步设置公网访问域名，这里使用https://dash.zeabur.com/</span></span><br><span class="line"><span class="comment">#选择后面不带标签的，免费，然后选择github</span></span><br><span class="line"><span class="comment">#第一次使用会配置github，授权后可以看到自己的仓库</span></span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/08/14/sby6DBJtl5LunIj.png" alt="image-20240814104728414"><br>
<img src="https://s2.loli.net/2024/08/14/fOYvlDVF1biwxog.png" alt="image-20240814104810992"><br>
<img src="https://s2.loli.net/2024/08/14/wWrJvtAcq1UsdRH.png" alt="image-20240814104847856"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#选择创建的仓库，部署，下面就成功了</span></span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/08/14/NImB7lrJUK2q3SW.png" alt="image-20240814104912100"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生成免费域名</span></span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/08/14/8LitDc2z1MAqFRa.png" alt="image-20240814105146923"></p>
<p><img src="https://s2.loli.net/2024/08/14/GlOYg23yovPjkWr.png" alt="image-20240814105225393"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#成功访问，之后可以在本地修改配置文件，逐步精美，然后上传到github，github仓库与zeabur关联会自动更新，非常方便</span></span><br><span class="line">Demo： https://caokaier.zeabur.app/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#补充，以下可以忽略</span></span><br><span class="line">hexo new [post]: 创建一个新的文章。</span><br><span class="line">hexo g 或 hexo generate: 生成静态文件。</span><br><span class="line">hexo s 或 hexo server: 启动本地服务器，预览网站。</span><br><span class="line">hexo d 或 hexo deploy: 部署网站到远程服务器。</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果你想要一个更友好的图形界面，可以考虑使用社区开发的插件，比如 hexo-admin。这个插件提供了一个简单的后台管理界面，你可以通过浏览器访问并管理 Hexo 站点的内容。</span></span><br><span class="line"><span class="comment">#安装 Hexo Admin：</span></span><br><span class="line"><span class="comment">#在 Hexo 项目的根目录下安装 hexo-admin：</span></span><br><span class="line">cnpm install --save hexo-admin</span><br><span class="line"><span class="comment">#启动 Hexo 本地服务器：</span></span><br><span class="line">hexo server</span><br><span class="line"><span class="comment">#访问 http://localhost:4000/admin/，你将看到一个简易的后台管理界面。</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>blog</category>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>教程</tag>
      </tags>
  </entry>
</search>
